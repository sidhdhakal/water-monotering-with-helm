services:
  # MySQL Database Service
  db:
    image: mysql:8.0
    container_name: water-quality-db
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: chinmay
      MYSQL_DATABASE: wqm
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - wqm-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot Backend Service
  backend:
    build: ./backend
    container_name: water-quality-backend-app
    ports:
      - "8000:8080" # <-- FIX: Host port 8000 maps to container's port 8080
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://db:3306/wqm?useSSL=false&allowPublicKeyRetrieval=true
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=chinmay
      - SPRING_SERVER_PORT=8080 # This tells Spring to listen on 8080 inside the container
      # - SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT=org.hibernate.dialect.MySQLDialect # <-- IMPROVEMENT: Removed, Spring Boot auto-detects this.
    depends_on:
      db:
        condition: service_healthy
    networks:
      - wqm-network # <-- FIX: Added backend to the shared network

  # React Frontend Service
  frontend:
    build:
      context: ./frontend
      args:
        # <-- IMPROVEMENT: This is the correct way to pass the API URL to React
        - REACT_APP_API_URL=http://localhost:8000
    container_name: water-quality-frontend-app
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - wqm-network
    # The 'environment' section here is not needed for a standard React build.
    # The API URL is baked in at build time using the ARG above.

# Network and volume definitions
networks:
  wqm-network:
    driver: bridge

volumes:
  db_data: # This defines the named volume used by the db service